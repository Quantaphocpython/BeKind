.tiptap.ProseMirror {
  img {
    max-width: 100%;
    height: auto;
    display: block;
  }

  > img:not([data-type='emoji'] img) {
    margin: 2rem 0;
    outline: 0.125rem solid transparent;
    border-radius: var(--tt-radius-xs, 0.25rem);
  }

  img:not([data-type='emoji'] img).ProseMirror-selectednode {
    outline-color: var(--tt-brand-color-500);
  }

  // Image alignment classes
  img.image-align-left {
    margin-left: 0;
    margin-right: auto;
  }

  img.image-align-center {
    margin-left: auto;
    margin-right: auto;
  }

  img.image-align-right {
    margin-left: auto;
    margin-right: 0;
  }

  img.image-align-justify {
    margin-left: 0;
    margin-right: 0;
    width: 100%;
  }

  // Image alignment support
  p:has(img) {
    text-align: left;
    margin: 0;
    padding: 0;

    &[style*='text-align: center'] {
      text-align: center;

      img {
        margin-left: auto;
        margin-right: auto;
        display: block;
      }
    }

    &[style*='text-align: right'] {
      text-align: right;

      img {
        margin-left: auto;
        margin-right: 0;
        display: block;
      }
    }

    &[style*='text-align: justify'] {
      text-align: justify;
    }
  }

  // Direct image alignment (when image is not in paragraph)
  div:has(> img) {
    &[style*='text-align: center'] {
      text-align: center;

      img {
        margin-left: auto;
        margin-right: auto;
        display: block;
      }
    }

    &[style*='text-align: right'] {
      text-align: right;

      img {
        margin-left: auto;
        margin-right: 0;
        display: block;
      }
    }

    &[style*='text-align: justify'] {
      text-align: justify;
    }
  }

  // Thread image handling
  .tiptap-thread:has(> img) {
    margin: 2rem 0;

    img {
      outline: 0.125rem solid transparent;
      border-radius: var(--tt-radius-xs, 0.25rem);
    }
  }

  .tiptap-thread img {
    margin: 0;
  }
}

